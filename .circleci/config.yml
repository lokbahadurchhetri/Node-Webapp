# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build_CI:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/node-webapp

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  build_CD:
    working_directory: ~/node-webapp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            -  "4e:86:af:0d:ae:e6:b4:6d:96:4f:52:2f:86:91:b9:af"
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/node-webapp.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/node-webapp.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=node-webapp -t node-webapp .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/Node-Webapp.tar node-webapp
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/node-webapp.tar
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login ${acrserver} -u ${acruser} -p ${acrpasswd}
              docker tag node-webapp "${acrserver}/node-web-app:${CIRCLE_BUILD_NUM}
              docker push "${acrserver}/node-web-app:${CIRCLE_BUILD_NUM}"
              ssh -o StrictHostKeyChecking=no mwadmin@k8sclustermgmt.eastus.cloudapp.azure.com "env IMAGE_TAG=${CIRCLE_BUILD_NUM}; env"
            fi

workflows:
  version: 2
  CI_and_CD:
    jobs:
      - build_CI
      - build_CD:
          requires:
            - build_CI
